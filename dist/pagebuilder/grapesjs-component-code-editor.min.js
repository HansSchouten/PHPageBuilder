/*! grapesjs-component-code-editor - 1.0.16 */
!function (e, t) {
    'object' == typeof exports && 'object' == typeof module ? module.exports = t() : 'function' == typeof define && define.amd ? define([], t) : 'object' == typeof exports ? exports["grapesjs-component-code-editor"] = t() : e["grapesjs-component-code-editor"] = t()
}(window, (function () {
    return function (e) {
        var t = {};

        function n(i) {
            if (t[i]) return t[i].exports;
            var r = t[i] = {i: i, l: !1, exports: {}};
            return e[i].call(r.exports, r, r.exports, n), r.l = !0, r.exports
        }

        return n.m = e, n.c = t, n.d = function (e, t, i) {
            n.o(e, t) || Object.defineProperty(e, t, {enumerable: !0, get: i})
        }, n.r = function (e) {
            'undefined' != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {value: 'Module'}), Object.defineProperty(e, '__esModule', {value: !0})
        }, n.t = function (e, t) {
            if (1 & t && (e = n(e)), 8 & t) return e;
            if (4 & t && 'object' == typeof e && e && e.__esModule) return e;
            var i = Object.create(null);
            if (n.r(i), Object.defineProperty(i, 'default', {
                enumerable: !0,
                value: e
            }), 2 & t && 'string' != typeof e) for (var r in e) n.d(i, r, function (t) {
                return e[t]
            }.bind(null, r));
            return i
        }, n.n = function (e) {
            var t = e && e.__esModule ? function () {
                return e.default
            } : function () {
                return e
            };
            return n.d(t, 'a', t), t
        }, n.o = function (e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
        }, n.p = "", n(n.s = 3)
    }([function (e, t) {
        e.exports = function (e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n, e
        }
    }, function (e, t) {
        e.exports = function (e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }
    }, function (e, t) {
        function n(e, t) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        e.exports = function (e, t, i) {
            return t && n(e.prototype, t), i && n(e, i), e
        }
    }, function (e, t, n) {
        "use strict";
        n.r(t);
        var i = n(0), r = n.n(i), o = n(1), s = n.n(o), c = n(2), a = n.n(c),
            l = 'undefined' != typeof window ? window : null, u = null === l, d = u ? void 0 : l.document,
            h = function () {
                return !1
            }, p = u ? 'calc' : ['', '-webkit-', '-moz-', '-o-'].filter((function (e) {
                var t = d.createElement('div');
                return t.style.cssText = "width:" + e + "calc(9px)", !!t.style.length
            })).shift() + "calc", f = function (e) {
                return 'string' == typeof e || e instanceof String
            }, v = function (e) {
                if (f(e)) {
                    var t = d.querySelector(e);
                    if (!t) throw new Error("Selector " + e + " did not match a DOM element");
                    return t
                }
                return e
            }, m = function (e, t, n) {
                var i = e[t];
                return void 0 !== i ? i : n
            }, g = function (e, t, n, i) {
                if (t) {
                    if ('end' === i) return 0;
                    if ('center' === i) return e / 2
                } else if (n) {
                    if ('start' === i) return 0;
                    if ('center' === i) return e / 2
                }
                return e
            }, y = function (e, t) {
                var n = d.createElement('div');
                return n.className = "gutter gutter-" + t, n
            }, b = function (e, t, n) {
                var i = {};
                return f(t) ? i[e] = t : i[e] = p + "(" + t + "% - " + n + "px)", i
            }, E = function (e, t) {
                var n;
                return (n = {})[e] = t + "px", n
            }, C = function (e, t) {
                if (void 0 === t && (t = {}), u) return {};
                var n, i, r, o, s, c, a = e;
                Array.from && (a = Array.from(a));
                var p = v(a[0]).parentNode, f = getComputedStyle ? getComputedStyle(p) : null,
                    C = f ? f.flexDirection : null, O = m(t, 'sizes') || a.map((function () {
                        return 100 / a.length
                    })), S = m(t, 'minSize', 100), w = Array.isArray(S) ? S : a.map((function () {
                        return S
                    })), P = m(t, 'expandToMin', !1), j = m(t, 'gutterSize', 10), z = m(t, 'gutterAlign', 'center'),
                    x = m(t, 'snapOffset', 30), k = m(t, 'dragInterval', 1), T = m(t, 'direction', "horizontal"),
                    L = m(t, 'cursor', "horizontal" === T ? 'col-resize' : 'row-resize'), _ = m(t, 'gutter', y),
                    D = m(t, 'elementStyle', b), R = m(t, 'gutterStyle', E);

                function M(e, t, i, r) {
                    var o = D(n, t, i, r);
                    Object.keys(o).forEach((function (t) {
                        e.style[t] = o[t]
                    }))
                }

                function B() {
                    return c.map((function (e) {
                        return e.size
                    }))
                }

                function A(e) {
                    return 'touches' in e ? e.touches[0][i] : e[i]
                }

                function H(e) {
                    var t = c[this.a], n = c[this.b], i = t.size + n.size;
                    t.size = e / this.size * i, n.size = i - e / this.size * i, M(t.element, t.size, this._b, t.i), M(n.element, n.size, this._c, n.i)
                }

                function U(e) {
                    var n, i = c[this.a], r = c[this.b];
                    this.dragging && (n = A(e) - this.start + (this._b - this.dragOffset), k > 1 && (n = Math.round(n / k) * k), n <= i.minSize + x + this._b ? n = i.minSize + this._b : n >= this.size - (r.minSize + x + this._c) && (n = this.size - (r.minSize + this._c)), H.call(this, n), m(t, 'onDrag', h)(B()))
                }

                function W() {
                    var e = c[this.a].element, t = c[this.b].element, i = e.getBoundingClientRect(),
                        s = t.getBoundingClientRect();
                    this.size = i[n] + s[n] + this._b + this._c, this.start = i[r], this.end = i[o]
                }

                function I(e) {
                    var t = function (e) {
                        if (!getComputedStyle) return null;
                        var t = getComputedStyle(e);
                        if (!t) return null;
                        var n = e[s];
                        return 0 === n ? null : n -= "horizontal" === T ? parseFloat(t.paddingLeft) + parseFloat(t.paddingRight) : parseFloat(t.paddingTop) + parseFloat(t.paddingBottom)
                    }(p);
                    if (null === t) return e;
                    if (w.reduce((function (e, t) {
                        return e + t
                    }), 0) > t) return e;
                    var n = 0, i = [], r = e.map((function (r, o) {
                        var s = t * r / 100, c = g(j, 0 === o, o === e.length - 1, z), a = w[o] + c;
                        return s < a ? (n += a - s, i.push(0), a) : (i.push(s - a), s)
                    }));
                    return 0 === n ? e : r.map((function (e, r) {
                        var o = e;
                        if (n > 0 && i[r] - n > 0) {
                            var s = Math.min(n, i[r] - n);
                            n -= s, o = e - s
                        }
                        return o / t * 100
                    }))
                }

                function V() {
                    var e = c[this.a].element, n = c[this.b].element;
                    this.dragging && m(t, 'onDragEnd', h)(B()), this.dragging = !1, l.removeEventListener('mouseup', this.stop), l.removeEventListener('touchend', this.stop), l.removeEventListener('touchcancel', this.stop), l.removeEventListener('mousemove', this.move), l.removeEventListener('touchmove', this.move), this.stop = null, this.move = null, e.removeEventListener('selectstart', h), e.removeEventListener('dragstart', h), n.removeEventListener('selectstart', h), n.removeEventListener('dragstart', h), e.style.userSelect = '', e.style.webkitUserSelect = '', e.style.MozUserSelect = '', e.style.pointerEvents = '', n.style.userSelect = '', n.style.webkitUserSelect = '', n.style.MozUserSelect = '', n.style.pointerEvents = '', this.gutter.style.cursor = '', this.parent.style.cursor = '', d.body.style.cursor = ''
                }

                function $(e) {
                    if (!('button' in e) || 0 === e.button) {
                        var n = c[this.a].element, i = c[this.b].element;
                        this.dragging || m(t, 'onDragStart', h)(B()), e.preventDefault(), this.dragging = !0, this.move = U.bind(this), this.stop = V.bind(this), l.addEventListener('mouseup', this.stop), l.addEventListener('touchend', this.stop), l.addEventListener('touchcancel', this.stop), l.addEventListener('mousemove', this.move), l.addEventListener('touchmove', this.move), n.addEventListener('selectstart', h), n.addEventListener('dragstart', h), i.addEventListener('selectstart', h), i.addEventListener('dragstart', h), n.style.userSelect = 'none', n.style.webkitUserSelect = 'none', n.style.MozUserSelect = 'none', n.style.pointerEvents = 'none', i.style.userSelect = 'none', i.style.webkitUserSelect = 'none', i.style.MozUserSelect = 'none', i.style.pointerEvents = 'none', this.gutter.style.cursor = L, this.parent.style.cursor = L, d.body.style.cursor = L, W.call(this), this.dragOffset = A(e) - this.end
                    }
                }

                "horizontal" === T ? (n = 'width', i = 'clientX', r = 'left', o = 'right', s = 'clientWidth') : 'vertical' === T && (n = 'height', i = 'clientY', r = 'top', o = 'bottom', s = 'clientHeight'), O = I(O);
                var F = [];

                function N(e) {
                    var t = e.i === F.length, n = t ? F[e.i - 1] : F[e.i];
                    W.call(n);
                    var i = t ? n.size - e.minSize - n._c : e.minSize + n._b;
                    H.call(n, i)
                }

                return (c = a.map((function (e, t) {
                    var i, r = {element: v(e), size: O[t], minSize: w[t], i: t};
                    if (t > 0 && ((i = {
                        a: t - 1,
                        b: t,
                        dragging: !1,
                        direction: T,
                        parent: p
                    })._b = g(j, t - 1 == 0, !1, z), i._c = g(j, !1, t === a.length - 1, z), 'row-reverse' === C || 'column-reverse' === C)) {
                        var o = i.a;
                        i.a = i.b, i.b = o
                    }
                    if (t > 0) {
                        var s = _(t, T, r.element);
                        !function (e, t, i) {
                            var r = R(n, t, i);
                            Object.keys(r).forEach((function (t) {
                                e.style[t] = r[t]
                            }))
                        }(s, j, t), i._a = $.bind(i), s.addEventListener('mousedown', i._a), s.addEventListener('touchstart', i._a), p.insertBefore(s, r.element), i.gutter = s
                    }
                    return M(r.element, r.size, g(j, 0 === t, t === a.length - 1, z), t), t > 0 && F.push(i), r
                }))).forEach((function (e) {
                    var t = e.element.getBoundingClientRect()[n];
                    t < e.minSize && (P ? N(e) : e.minSize = t)
                })), {
                    setSizes: function (e) {
                        var t = I(e);
                        t.forEach((function (e, n) {
                            if (n > 0) {
                                var i = F[n - 1], r = c[i.a], o = c[i.b];
                                r.size = t[n - 1], o.size = e, M(r.element, r.size, i._b, r.i), M(o.element, o.size, i._c, o.i)
                            }
                        }))
                    }, getSizes: B, collapse: function (e) {
                        N(c[e])
                    }, destroy: function (e, t) {
                        F.forEach((function (i) {
                            if (!0 !== t ? i.parent.removeChild(i.gutter) : (i.gutter.removeEventListener('mousedown', i._a), i.gutter.removeEventListener('touchstart', i._a)), !0 !== e) {
                                var r = D(n, i.a.size, i._b);
                                Object.keys(r).forEach((function (e) {
                                    c[i.a].element.style[e] = '', c[i.b].element.style[e] = ''
                                }))
                            }
                        }))
                    }, parent: p, pairs: F
                }
            };

        function O(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        var S = function () {
            function e(t, n) {
                s()(this, e), this.editor = t, this.$ = t.$, this.pfx = t.getConfig('stylePrefix'), this.opts = n, this.canvas = this.findWithinEditor(".".concat(this.pfx, "cv-canvas")), this.panelViews = n.appendTo ? this.$(n.appendTo) : this.findWithinEditor(".".concat(this.pfx, "pn-").concat(n.panelId)), this.isShowing = !0
            }

            return a()(e, [{
                key: "findPanel", value: function () {
                    var e = this.editor.Panels, t = this.opts.panelId;
                    return e.getPanel(t) || e.addPanel({id: t})
                }
            }, {
                key: "findWithinEditor", value: function (e) {
                    return this.$(e, this.editor.getEl())
                }
            }, {
                key: "buildCodeEditor", value: function (e) {
                    var t = this.editor, n = this.opts;
                    return t.CodeManager.createViewer(function (e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = null != arguments[t] ? arguments[t] : {};
                            t % 2 ? O(Object(n), !0).forEach((function (t) {
                                r()(e, t, n[t])
                            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : O(Object(n)).forEach((function (t) {
                                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                            }))
                        }
                        return e
                    }({
                        codeName: 'html' === e ? 'htmlmixed' : 'css',
                        theme: 'hopscotch',
                        readOnly: 0,
                        autoBeautify: 1,
                        autoCloseTags: 1,
                        autoCloseBrackets: 1,
                        styleActiveLine: 1,
                        smartIndent: 1
                    }, n.codeViewOptions))
                }
            }, {
                key: "buildSection", value: function (e, t) {
                    var n = this.$, i = this.pfx, r = this.opts, o = n('<section></section>'),
                        s = 'html' === e ? r.htmlBtnText : r.cssBtnText,
                        c = r.cleanCssBtn && 'css' === e ? "<button class=\"cp-delete-".concat(e, " ").concat(i, "btn-prim\">").concat(r.cleanCssBtnText, "</button>") : '';
                    o.append(n("\n            <div class=\"codepanel-separator\">\n                <div class=\"codepanel-label\">".concat(e, "</div>\n                <div class=\"cp-btn-container\">\n                    ").concat(c, "\n                    <button class=\"cp-apply-").concat(e, " ").concat(i, "btn-prim\">").concat(s, "</button>\n                </div>\n            </div>")));
                    var a = t.getElement();
                    return a.style.height = 'calc(100% - 30px)', o.append(a), this.codePanel.append(o), o.get(0)
                }
            }, {
                key: "buildCodePanel", value: function () {
                    var e = this, t = this.$, n = this.editor, i = this.opts.panelId ? this.findPanel() : 0;
                    this.codePanel = t('<div></div>'), this.codePanel.addClass('code-panel'), this.htmlCodeEditor = this.buildCodeEditor('html'), this.cssCodeEditor = this.buildCodeEditor('css');
                    var r = [this.buildSection('html', this.htmlCodeEditor), this.buildSection('css', this.cssCodeEditor)];
                    i && !this.opts.appendTo && i.set('appendContent', this.codePanel).trigger('change:appendContent'), this.opts.appendTo && t(this.opts.appendTo).append(this.codePanel), this.updateEditorContents(), this.codePanel.find('.cp-apply-html').on('click', this.updateHtml.bind(this)), this.codePanel.find('.cp-apply-css').on('click', this.updateCss.bind(this)), this.opts.cleanCssBtn && this.codePanel.find('.cp-delete-css').on('click', this.deleteSelectedCss.bind(this)), C(r, {
                        direction: 'vertical',
                        sizes: [50, 50],
                        minSize: 100,
                        gutterSize: 1,
                        onDragEnd: this.refreshEditors.bind(this)
                    }), n.on('component:update', (function (t) {
                        return e.updateEditorContents()
                    }))
                }
            }, {
                key: "showCodePanel", value: function () {
                    this.isShowing = !0, this.updateEditorContents(), this.codePanel.css('display', 'block'), setTimeout(this.refreshEditors.bind(this), 320), this.opts.preserveWidth || (this.panelViews.css('width', this.opts.openState.pn), this.canvas.css('width', this.opts.openState.cv))
                }
            }, {
                key: "hideCodePanel", value: function () {
                    this.codePanel && this.codePanel.css('display', 'none'), this.isShowing = !1, this.opts.preserveWidth || (this.panelViews.css('width', this.opts.closedState.pn), this.canvas.css('width', this.opts.closedState.cv))
                }
            }, {
                key: "refreshEditors", value: function () {
                    this.htmlCodeEditor.refresh(), this.cssCodeEditor.refresh()
                }
            }, {
                key: "updateHtml", value: function () {
                    var e = this.editor, t = this.component, n = this.htmlCodeEditor.getContent().trim();
                    if (n && n !== this.previousHtmlCode) {
                        this.previousHtmlCode = n;
                        var i = '';
                        this.cssCodeEditor.getContent().split(/(?<=}\n)/g).forEach((function (e) {
                            /^#/.test(e) && (i += e)
                        })), n += "<style>".concat(i, "</style>"), e.select(t.replaceWith(n))
                    }
                }
            }, {
                key: "updateCss", value: function () {
                    var e = this.cssCodeEditor.getContent().trim();
                    // TODO: hard code to addComponents
                    e && e !== this.previousCssCode && (this.parseRemove(e), this.previousCssCode = e, this.editor.addComponents("<style>".concat(e, "</style>")))
                    // e && e !== this.previousCssCode && (this.parseRemove(e), this.previousCssCode = e, this.editor.Components.addComponent("<style>".concat(e, "</style>")))
                    }
            }, {
                key: "deleteSelectedCss", value: function () {
                    var e = this;
                    this.cssCodeEditor.editor.getSelections().forEach((function (t) {
                        return e.parseRemove(t)
                    })), this.cssCodeEditor.editor.deleteH()
                }
            }, {
                key: "parseRemove", value: function (e) {
                    var t = this, n = this.editor, i = n.CssComposer, r = i.getAll();
                    n.Parser.parseCss(e).forEach((function (e) {
                        var n = {
                            singleAtRule: e.singleAtRule,
                            atRuleType: e.atRuleType,
                            mediaText: e.mediaText,
                            state: e.state
                        };
                        e.selectors.length && e.selectors.forEach((function (e) {
                            t.removeSelector(e, r, i, n)
                        })), e.selectorsAdd && e.selectorsAdd.split(', ').forEach((function (e) {
                            t.removeSelector(e, r, i, n)
                        }))
                    }))
                }
            }, {
                key: "removeSelector", value: function (e, t, n) {
                    var i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}, r = i.singleAtRule,
                        o = i.atRuleType, s = i.mediaText, c = i.state, a = t.filter((function (t) {
                            return o && s ? function (e) {
                                return e.get('atRuleType') == o && e.get('mediaText') == s
                            } : o && r ? function (e) {
                                return e.get('atRuleType') == o && e.get('singleAtRule') == r
                            } : c ? t == n.getRule("".concat(e, ":").concat(c)) : t == n.getRule(e)
                        }));
                    t.remove(a)
                }
            }, {
                key: "updateEditorContents", value: function () {
                    this.isShowing && (this.component = this.editor.getSelected(), this.component && (this.htmlCodeEditor.setContent(this.getComponentHtml(this.component)), this.cssCodeEditor.setContent(this.editor.CodeManager.getCode(this.component, 'css', {cssc: this.editor.CssComposer}))))
                }
            }, {
                key: "getComponentHtml", value: function (e) {
                    var t = this.pfx, n = this.opts, i = '', r = e.getEl();
                    !n.clearData && r.classList.remove("".concat(t, "selected"));
                    var o = n.clearData ? e.toHTML() : 'wrapper' === r.id ? r.innerHTML : r.outerHTML;
                    !n.clearData && r.classList.add("".concat(t, "selected")), i += o;
                    var s = n.editJs ? e.getScriptString() : '';
                    return i += s ? "<script>".concat(s, "<\/script>") : ''
                }
            }]), e
        }();

        function w(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function P(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? w(Object(n), !0).forEach((function (t) {
                    r()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : w(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        var j = function (e, t) {
            var n = e.Commands, i = null;
            n.add("open-code", {
                run: function (e) {
                    !i && (i = new S(e, t)) && i.buildCodePanel(), i.showCodePanel()
                }, stop: function (e) {
                    i && i.hideCodePanel()
                }
            }), n.add("code-editor-object", (function (e, n) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                return new S(e, P(P({}, i), t))
            })), n.add("code-editor-constructor", (function () {
                return S
            }))
        };

        function z(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function (t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function x(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? z(Object(n), !0).forEach((function (t) {
                    r()(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : z(Object(n)).forEach((function (t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        t.default = function (e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = x(x({}, {
                panelId: 'views-container',
                appendTo: '',
                // TODO: hard coded the open and close state
                openState: {cv: 'calc(100% - 300px)', pn: '300px'},
                closedState: {cv: 'calc(100% - 300px)', pn: '300px'},
                codeViewOptions: {},
                preserveWidth: !1,
                editJs: !1,
                clearData: !1,
                cleanCssBtn: !0,
                htmlBtnText: 'Apply',
                cssBtnText: 'Apply',
                cleanCssBtnText: 'Delete'
            }), t);
            j(e, n)
        }
    }])
}));
//# sourceMappingURL=grapesjs-component-code-editor.min.js.map
